name: Pull Requests
on:
  pull_request:
    branches: ["main"]

jobs:
  setupEnvironment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set NodeJS 18
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install

      - name: Run build
        uses: borales/actions-yarn@v4
        with:
          cmd: build

  # checkPRVersion:
  #   needs: setupEnvironment
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #       with:
  #         fetch-depth: 0

  #     - name: Get package.json version
  #       id: package-version
  #       uses: Saionaro/extract-package-version@v1.2.1

  #     - name: "Get Previous tag"
  #       id: tag-version
  #       uses: "WyriHaximus/github-action-get-previous-tag@v1"

  #     - name: Step that always run
  #       shell: bash
  #       run: |
  #         echo "Package.json version is ${{ steps.package-version.outputs.version}}"
  #         echo "Tag version is ${{ steps.tag-version.outputs.tag }}"

  # - name: Step that run at valid
  #   if: steps.check.outputs.valid == 'valid'
  #   shell: bash
  #   run: |
  #     echo "PR is ${{ steps.check.outputs.valid }}"

  # - name: Step that run at invalid
  #   if: steps.check.outputs.valid != 'valid'
  #   shell: bash
  #   run: |
  #     echo "PR is ${{ steps.check.outputs.valid }}"

  version-check:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref_name }}

      - name: Check package version
        id: cpv
        uses: PostHog/check-package-version@v2

      - name: Echo output
        run: |
          echo "Committed version: ${{ steps.cpv.outputs.committed-version }}"
          echo "Published version: ${{ steps.cpv.outputs.published-version }}"
          echo "Is new version: ${{ steps.cpv.outputs.is-new-version }}"
